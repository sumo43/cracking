#include <cstdlib>
#include <iostream>
#include <vector>

using namespace std;

//where robot wants to be
const int h = 5;
const int w = 5;

int search(int y, int x, vector<char> &path, int **map) {

    
    if (y == h-1 && x == w-1) {
        return 1;
    }

    if(x >= w || y >= h) {
        return 0;
    } 

    if(map[y][x] == 1) {
        return 0;
    }

    int right = search(y, x+1, path, map);
    int bottom = search(y+1, x, path, map);

    if(right > bottom) {
        path.insert(path.begin(), 'r');
        return 1 + right;
    }
    else if(bottom < right) {
        path.insert(path.begin(), 'd');
        return 1 + bottom;
    }

    return 0;

}




int main(void) {

    int y = 0;
    int x = 0;

    vector<char> path;

    //init map
    int **map;
    map = new int *[h];
    for(int i = 0; i < h; i++) {
        map[i] = new int[w];
        for(int j = 0; j < w; j++) {
            map[i][j] = 0;
        }
    }

    int solved = robot(0, 0, path, map);

    for(int i = 0; i < path.size(); i++) {
        cout << path.at(i) << endl;
    }

}

